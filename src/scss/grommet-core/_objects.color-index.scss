// (C) Copyright 2014-2016 Hewlett Packard Enterprise Development LP

@function tint($color, $percent) {
  @return mix(#ffffff, $color, $percent);
}

@function generate-tint($color) {
  @return tint($color, 5%);
}

#{$dark-background-context} {
  color: $active-colored-text-color;
}

.background-color-index-brand {
  background-color: $brand-color;
}

@for $i from 1 through length($brand-neutral-colors) {
  .background-color-index-neutral-#{$i},
  .background-color-index-neutral-#{$i + length($brand-neutral-colors)} {
    background-color: nth($brand-neutral-colors, $i);

    &.tile--selectable:hover:not(.tile--selected) {
      // IE11 fix, so background color gets absorbed by Tile on hover
      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        background-color: nth($brand-neutral-colors, $i);
      }
    }
  }

  .background-color-index-neutral-#{$i}-t,
  .background-color-index-neutral-#{$i + length($brand-neutral-colors)}-t {
    background-color: generate-tint(nth($brand-neutral-colors, $i));
  }

  .background-color-index-neutral-#{$i}-a,
  .background-color-index-neutral-#{$i + length($brand-neutral-colors)}-a {
    background-color: rgba(nth($brand-neutral-colors, $i), 0.8);
  }

  .border-color-index-neutral-#{$i},
  .border-color-index-neutral-#{$i + length($brand-neutral-colors)} {
    border-color: nth($brand-neutral-colors, $i);
  }

  .border-color-index-neutral-#{$i}-t,
  .border-color-index-neutral-#{$i + length($brand-neutral-colors)}-t {
    border-color: generate-tint(nth($brand-neutral-colors, $i));
  }

  .color-index-neutral-#{$i},
  .color-index-neutral-#{$i + length($brand-neutral-colors)} {
    color: nth($brand-neutral-colors, $i);
  }

  .color-index-neutral-#{$i}-t,
  .color-index-neutral-#{$i + length($brand-neutral-colors)}-t {
    color: generate-tint(nth($brand-neutral-colors, $i));
  }

  .background-hover-color-index-neutral-#{$i}:hover,
  .background-hover-color-index-neutral-#{$i + length($brand-neutral-colors)}:hover {
    background-color: rgba(nth($brand-neutral-colors, $i), 0.3);
  }

  .border-small-hover-color-index-neutral-#{$i}:hover,
  .border-small-hover-color-index-neutral-#{$i + length($brand-neutral-colors)}:hover {
    box-shadow: 0 0 0 1px nth($brand-neutral-colors, $i);
  }

  .border-medium-hover-color-index-neutral-#{$i}:hover,
  .border-medium-hover-color-index-neutral-#{$i + length($brand-neutral-colors)}:hover {
    box-shadow: 0 0 0 halve($inuit-base-spacing-unit) nth($brand-neutral-colors, $i);
  }

  .border-large-hover-color-index-neutral-#{$i}:hover,
  .border-large-hover-color-index-neutral-#{$i + length($brand-neutral-colors)}:hover {
    box-shadow: 0 0 0 $inuit-base-spacing-unit nth($brand-neutral-colors, $i);
  }
}

@for $i from 1 through length($brand-accent-colors) {
  .background-color-index-accent-#{$i},
  .background-color-index-accent-#{$i + length($brand-accent-colors)} {
    background-color: nth($brand-accent-colors, $i);

    &.tile--selectable:hover:not(.tile--selected) {
      // IE11 fix, so background color gets absorbed by Tile on hover
      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        background-color: nth($brand-accent-colors, $i);
      }
    }
  }

  .background-color-index-accent-#{$i}-t,
  .background-color-index-accent-#{$i + length($brand-accent-colors)}-t {
    background-color: generate-tint(nth($brand-accent-colors, $i));
  }

  .background-color-index-accent-#{$i}-a,
  .background-color-index-accent-#{$i + length($brand-accent-colors)}-a {
    background-color: rgba(nth($brand-accent-colors, $i), 0.8);
  }

  .border-color-index-accent-#{$i},
  .border-color-index-accent-#{$i + length($brand-accent-colors)} {
    border-color: nth($brand-accent-colors, $i);
  }

  .border-color-index-accent-#{$i}-t,
  .border-color-index-accent-#{$i + length($brand-accent-colors)}-t {
    border-color: generate-tint(nth($brand-accent-colors, $i));
  }

  .color-index-accent-#{$i},
  .color-index-accent-#{$i + length($brand-accent-colors)} {
    color: nth($brand-accent-colors, $i);
  }

  .color-index-accent-#{$i}-t,
  .color-index-accent-#{$i + length($brand-accent-colors)}-t {
    color: generate-tint(nth($brand-accent-colors, $i));
  }

  .background-hover-color-index-accent-#{$i}:hover,
  .background-hover-color-index-accent-#{$i + length($brand-accent-colors)}:hover {
    background-color: rgba(nth($brand-accent-colors, $i), 0.3);
  }

  .border-small-hover-color-index-accent-#{$i}:hover,
  .border-small-hover-color-index-accent-#{$i + length($brand-accent-colors)}:hover {
    box-shadow: 0 0 0 1px nth($brand-accent-colors, $i);
  }

  .border-medium-hover-color-index-accent-#{$i}:hover,
  .border-medium-hover-color-index-accent-#{$i + length($brand-accent-colors)}:hover {
    box-shadow: 0 0 0 halve($inuit-base-spacing-unit) nth($brand-accent-colors, $i);
  }

  .border-large-hover-color-index-accent-#{$i}:hover,
  .border-large-hover-color-index-accent-#{$i + length($brand-accent-colors)}:hover {
    box-shadow: 0 0 0 $inuit-base-spacing-unit nth($brand-accent-colors, $i);
  }
}

@for $i from 1 through length($brand-grey-colors) {
  .background-color-index-grey-#{$i},
  .background-color-index-grey-#{$i + length($brand-grey-colors)} {
    background-color: nth($brand-grey-colors, $i);

    &.tile--selectable:hover:not(.tile--selected) {
      // IE11 fix, so background color gets absorbed by Tile on hover
      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        background-color: nth($brand-grey-colors, $i);
      }
    }
  }

  .background-color-index-grey-#{$i}-a,
  .background-color-index-grey-#{$i + length($brand-grey-colors)}-a {
    background-color: rgba(nth($brand-grey-colors, $i), 0.8);
  }

  .border-color-index-grey-#{$i},
  .border-color-index-grey-#{$i + length($brand-grey-colors)} {
    border-color: nth($brand-grey-colors, $i);
  }

  .background-hover-color-index-grey-#{$i}:hover,
  .background-hover-color-index-grey-#{$i + length($brand-grey-colors)}:hover {
    background-color: rgba(nth($brand-grey-colors, $i), 0.3);
  }

  .border-small-hover-color-index-grey-#{$i}:hover,
  .border-small-hover-color-index-grey-#{$i + length($brand-grey-colors)}:hover {
    box-shadow: 0 0 0 1px nth($brand-grey-colors, $i);
  }

  .border-medium-hover-color-index-grey-#{$i}:hover,
  .border-medium-hover-color-index-grey-#{$i + length($brand-grey-colors)}:hover {
    box-shadow: 0 0 0 halve($inuit-base-spacing-unit) nth($brand-grey-colors, $i);
  }

  .border-large-hover-color-index-grey-#{$i}:hover,
  .border-large-hover-color-index-grey-#{$i + length($brand-grey-colors)}:hover {
    box-shadow: 0 0 0 $inuit-base-spacing-unit nth($brand-grey-colors, $i);
  }
}

@for $i from 1 through length($brand-graph-colors) {
  .background-color-index-graph-#{$i},
  .background-color-index-graph-#{$i + length($brand-graph-colors)} {
    background-color: nth($brand-graph-colors, $i);
  }

  .border-color-index-graph-#{$i},
  .border-color-index-graph-#{$i + length($brand-graph-colors)} {
    border-color: nth($brand-graph-colors, $i);
  }
}

@each $status, $color in $brand-status-colors {
  .background-color-index-#{$status} {
    background-color: $color;
  }

  .border-color-index-#{$status} {
    border-color: $color;
  }

  .color-index-#{$status} {
    color: $color;
  }

  .background-hover-color-index-#{$status}:hover {
    background-color: rgba($color, 0.3);
  }

  .border-small-hover-color-index-#{$status}:hover {
    box-shadow: 0 0 0 1px $color;
  }

  .border-medium-hover-color-index-#{$status}:hover {
    box-shadow: 0 0 0 halve($inuit-base-spacing-unit) $color;
  }

  .border-large-hover-color-index-#{$status}:hover {
    box-shadow: 0 0 0 $inuit-base-spacing-unit $color;
  }
}

@for $i from 1 through length($brand-light-colors) {
  .background-color-index-light-#{$i},
  .background-color-index-light-#{$i + length($brand-light-colors)} {
    background-color: nth($brand-light-colors, $i);

    &.tile--selectable:hover:not(.tile--selected) {
      // IE11 fix, so background color gets absorbed by Tile on hover
      @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        background-color: nth($brand-light-colors, $i);
      }
    }
  }

  .background-color-index-light-#{$i}-a,
  .background-color-index-light-#{$i + length($brand-light-colors)}-a {
    background-color: rgba(nth($brand-light-colors, $i), 0.8);
  }

  .border-color-index-light-#{$i},
  .border-color-index-light-#{$i + length($brand-light-colors)} {
    border-color: nth($brand-light-colors, $i);
  }

  .background-hover-color-index-light-#{$i}:hover,
  .background-hover-color-index-light-#{$i + length($brand-light-colors)}:hover {
    background-color: rgba(nth($brand-light-colors, $i), 0.3);
  }

  .border-small-hover-color-index-light-#{$i}:hover,
  .border-small-hover-color-index-light-#{$i + length($brand-light-colors)}:hover {
    box-shadow: 0 0 0 1px nth($brand-light-colors, $i);
  }

  .border-medium-hover-color-index-light-#{$i}:hover,
  .border-medium-hover-color-index-light-#{$i + length($brand-light-colors)}:hover {
    box-shadow: 0 0 0 halve($inuit-base-spacing-unit) nth($brand-light-colors, $i);
  }

  .border-large-hover-color-index-light-#{$i}:hover,
  .border-large-hover-color-index-light-#{$i + length($brand-light-colors)}:hover {
    box-shadow: 0 0 0 $inuit-base-spacing-unit nth($brand-light-colors, $i);
  }
}
